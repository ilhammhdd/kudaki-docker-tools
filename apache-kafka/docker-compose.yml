version: "3.3"

services:

  zookeeper:
    image: zookeeper
    container_name: zookeeper
    hostname: zookeeper
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888
    ports:
      - "2181:2181"
    networks:
      - ilhammhdd-docker-net
    restart: always

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    hostname: kafka
    ports:
      - "9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: "192.168.99.100"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
      KAFKA_HEAP_OPTS: "-Xmx256M -Xms128M"
      KAFKA_CREATE_TOPICS: "item:1:1,shop:1:1,mountain:1:1,file:1:1,event:1:1,user:1:1,review:1:1,rent:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - type: volume
        source: ilhammhdd-kafka-volume
        target: /var/lib/kafka/data
    networks:
      - ilhammhdd-docker-net
    restart: always

  schema-registry:
    image: confluentinc/cp-schema-registry
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
    networks:
      - ilhammhdd-docker-net
    restart: always

networks:
  ilhammhdd-docker-net:
    external: true
      
volumes:
  ilhammhdd-kafka-volume:
    external: true